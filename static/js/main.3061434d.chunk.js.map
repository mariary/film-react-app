{"version":3,"sources":["Modal/Modal.module.css","Film/File.module.css","Modal/Modal.js","Film/Film.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Modal","props","tagline","genres","production_companies","production_countries","console","log","info_en","undefined","className","active","onClick","setActive","e","stopPropagation","styles","info_wrapper","src","poster_path","img","alt","info","title","info_ru","orig_title","original_title","date","map","country","item","name","genre","id","runtime","vote","vote_average","count","vote_count","company","join","overview","href","imdb_id","imdb","Film","film","release_date","split","reverse","text","substr","useState","setInfo","modalActive","setModalActive","infoall","useEffect","getResult","getInfo","fetch","then","response","json","data","a","information","name_wrapper","orig_name","about","desc","modal_btn","App","films","setFilms","search","setSearch","query","setQuery","link","getFilm","results","onSubmit","preventDefault","type","value","onChange","target","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3061434d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Modal_img__1Ne9s\",\"title\":\"Modal_title__1AAZV\",\"orig_title\":\"Modal_orig_title__3AB-L\",\"info_wrapper\":\"Modal_info_wrapper__2fCHh\",\"production_countries\":\"Modal_production_countries__1djrL\",\"genres\":\"Modal_genres__3kvxA\",\"production_companies\":\"Modal_production_companies__1Rxqp\",\"overview\":\"Modal_overview__2pnWF\",\"item\":\"Modal_item__jqnlZ\",\"company\":\"Modal_company__2eFUS\",\"tagline\":\"Modal_tagline__1_o0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imdb\":\"File_imdb__1LhwI\",\"item\":\"File_item__VRZps\",\"name\":\"File_name__2Lggh\",\"name_wrapper\":\"File_name_wrapper__3D6Z9\",\"orig_name\":\"File_orig_name__2L_kO\",\"img\":\"File_img__3s_aL\",\"about\":\"File_about__1ymLe\",\"modal_btn\":\"File_modal_btn__2VP13\"};","import React from \"react\";\r\nimport styles from './Modal.module.css';\r\nimport './modal.css'\r\n\r\nconst Modal = (props) => {\r\n    let genres = [];\r\n    let production_companies = [];\r\n    let tagline;\r\n    let production_countries = [];\r\n    console.log(props.info_en);\r\n    if (props.info_en.genres !== undefined) {\r\n        genres = props.info_en.genres;\r\n        production_companies = props.info_en.production_companies;\r\n        production_countries = props.info_en.production_countries;\r\n        tagline = props.info_en.tagline;\r\n    }\r\n\r\n    return (\r\n        <div className={props.active ? 'modal active' : 'modal'} onClick={() => props.setActive(false)}>\r\n            <div className='modal_content' onClick={e => e.stopPropagation()}>\r\n                <div className={styles.info_wrapper}>\r\n                    <img src={\"https://image.tmdb.org/t/p/w400/\" + props.info_en.poster_path} className={styles.img}\r\n                         alt=\"\"/>\r\n                    <div className={styles.info}>\r\n                        <h1 className={styles.title}>{props.info_ru.title}</h1>\r\n                        <h1 className={styles.orig_title}>{props.info_en.original_title}</h1>\r\n                        <div className={styles.tagline}>\r\n                            {tagline}\r\n                        </div>\r\n                        <p className={styles.date}><span>Дата выпуска:</span>{props.date}</p>\r\n                        <p className={styles.production_countries}>\r\n                            <span>Страна:  </span>\r\n                            {production_countries.map((country) => {\r\n                                return (\r\n                                    <div key={country.name}  className={styles.item}>\r\n                                        {country.name}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </p>\r\n                        <p className={styles.genres}>\r\n                            <span>Жанр: </span>\r\n                            {genres.map((genre) => {\r\n                                return (\r\n                                    <div key={genre.id} className={styles.item}>\r\n                                        {genre.name}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </p>\r\n                        <p>\r\n                            <span>Продолжительность:</span>\r\n                            {props.info_en.runtime + 'min'}\r\n                        </p>\r\n                        <p className={styles.vote}><span>Рейтинг:</span>{props.info_ru.vote_average}</p>\r\n                        <p className={styles.count}><span>Число голосов:</span>{props.info_ru.vote_count}</p>\r\n                        <span>Компании: </span>\r\n                        <p className={styles.production_companies}>\r\n                            {production_companies.map((company) => {\r\n                                return (\r\n                                    <div key={company.id} className={[styles.item, styles.company].join(' ')}>\r\n                                        {company.name}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <span>Описание: </span>\r\n                <p className={styles.overview}>{props.info_ru.overview}</p>\r\n                <a href={\"https://www.imdb.com/title/\" + props.info_en.imdb_id + \"/\"} className={styles.imdb}>Open in imdb</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//\r\nexport default Modal","import React, {useState, useEffect} from \"react\";\r\nimport styles from './File.module.css';\r\nimport '../App.css';\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nconst Film = (props) => {\r\n\r\n    const date = props.film.release_date.split('-').reverse().join('.');\r\n    const text = props.film.overview.substr(0, 300) + '...';\r\n\r\n    const [info, setInfo] = useState();\r\n    const [modalActive, setModalActive] = useState(false)\r\n\r\n    let infoall = {};\r\n\r\n    if (info !== undefined) {\r\n        infoall = info;\r\n    }\r\n    useEffect(() => {\r\n        getResult();\r\n    }, [])\r\n\r\n    const getInfo = fetch(`https://api.themoviedb.org/3/movie/${props.film.id}?api_key=b5a84e1c00edd992be2834f3fbe99ff2`, {})\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            return data;\r\n        })\r\n\r\n    const getResult = async () => {\r\n        const information = await getInfo;\r\n        setInfo(information)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.item}>\r\n            <a name={props.film.id}>\r\n                <div className={styles.name_wrapper}>\r\n                    <h1 className={styles.name}>{props.film.title}</h1>\r\n                    <h3 className={styles.orig_name}>{props.film.original_title}</h3>\r\n                </div>\r\n            </a>\r\n            <img className={styles.img} src={`https://image.tmdb.org/t/p/w400${props.film.poster_path}`} alt=\"\"/>\r\n            <div className={styles.about}>\r\n                <p className={styles.date}><span>Дата выпуска: </span>{date}</p>\r\n                <p className={styles.desc}><span>Описание: </span>{text}</p>\r\n                <p className={styles.vote}><span>Рейтинг: </span>{props.film.vote_average}</p>\r\n                <p className={styles.count}><span>Число голосов: </span>{props.film.vote_count}</p>\r\n            </div>\r\n            <a href={\"https://www.imdb.com/title/\" + infoall.imdb_id + \"/\"} className={styles.imdb}>Open in imdb</a>\r\n            <a href={'#' + props.film.id}>\r\n                <button className={styles.modal_btn} onClick={() => setModalActive(true)}>About</button>\r\n            </a>\r\n            <Modal\r\n                key = {props.film.id}\r\n                active={modalActive}\r\n                setActive={setModalActive}\r\n                info_en={infoall}\r\n                info_ru={props.film}\r\n                date={date}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Film;","import React, {useEffect, useState} from \"react\";\r\nimport './App.css';\r\nimport Film from \"./Film/Film\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const key = 'b5a84e1c00edd992be2834f3fbe99ff2';\r\n\r\n    const [films, setFilms] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [query, setQuery] = useState('LOl');\r\n\r\n    const link = `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}&language=ru`;\r\n\r\n    useEffect(() => {\r\n        getFilm();\r\n    }, [query])\r\n\r\n    const getFilm = async () => {\r\n        const response = await fetch(link);\r\n        const data = await response.json();\r\n        setFilms(data.results)\r\n    }\r\n\r\n    const updateSearch = e => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    const getSearch = e => {\r\n        e.preventDefault();\r\n        if (search !== ''){\r\n            setQuery(search)\r\n            setSearch('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <form onSubmit={getSearch} className='form'>\r\n                <input type=\"text\" className='search' value={search} onChange={updateSearch}/>\r\n                <button type='submit' className='search_btn'>\r\n                </button>\r\n            </form>\r\n            <div className=\"list\">\r\n                {films.map((film) => {\r\n                    if (film.poster_path != null && film.overview.length > 0) {\r\n                        return (\r\n                            <Film\r\n                                key={film.id}\r\n                                film={film}\r\n                            />\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}